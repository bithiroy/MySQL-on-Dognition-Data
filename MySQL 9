MySQL 9: Useful Logical Operators (If, CASE)

1. IF expressions
- Frequently used in SELECT statements as a compact way to rename values in a column.
    IF([your conditions],[value outputted if conditions are met],[value outputted if conditions are NOT met])

to output one column that provided the time stamp of when a user account was created, and a second column called user_type that used that time stamp to determine whether the user was an early or late user:

    SELECT created_at, IF(created_at<'2014-06-01','early_user','late_user') AS user_type
    FROM users;

to retrieve a list of unique user_guids:
    SELECT cleaned_users.user_guid as UserID,
       IF(cleaned_users.first_account<'2014-06-01','early_user','late_user') AS user_type
    FROM (SELECT user_guid, MIN(created_at) AS first_account 
          FROM users
          GROUP BY user_guid) AS cleaned_users;

To count the number of unique early or late users using a GROUP BY statement:
    SELECT IF(cleaned_users.first_account<'2014-06-01','early_user','late_user') AS user_type,
           COUNT(cleaned_users.first_account)
    FROM (SELECT user_guid, MIN(created_at) AS first_account 
          FROM users
          GROUP BY user_guid) AS cleaned_users
    GROUP BY user_type;


Multiple IF expressions:
-	When you nest IF expressions, it is important to encase each IF expression--as well as the entire IF expression put together--in parentheses.
    SELECT IF(cleaned_users.country='US','In US', 
              IF(cleaned_users.country='N/A','Not Applicable','Outside US')) AS US_user, 
             count(cleaned_users.user_guid)   
    FROM 
	      (SELECT DISTINCT user_guid, country 
     	   FROM users
      	 WHERE country IS NOT NULL) AS cleaned_users
    GROUP BY US_user;
